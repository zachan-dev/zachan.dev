define({'activity':{d:'A business process model entity that represents a function, task, or sub-process. Activities are imported to ALM together with their parent business process model.',l:''},'alert':{d:'A notification that informs specified users of changes in requirements, tests or defects. An alert can be triggered as a result of automatic notification rules or as a follow up reminder that you set up for yourself.',l:''},'ALM Editions':{d:'Application Lifecycle Management is also available in several editions which provide subsets of ALM functionality.\n\nALM Essential Edition: Provides a subset of ALM product functionality, and is designed to help smaller teams get up and running quickly. It provides core functionality for requirements management, test management, and defect management.\n\nQuality Center Enterprise Edition: Resides on the same unified platform as ALM.  It delivers core functionality for quality management. It supports building a quality center of excellence through  tight integrations with Unified Functional Testing, Business Process Testing, and Sprinter.\n\nPerformance Center Edition: Functionality for the complete management, scheduling, running, and monitoring of performance test scripts.  It resides on the same platform as ALM and integrates directly with ALM and LoadRunner.\n\nALM Express Edition: Provides a subset of ALM product functionality, and is designed to introduce new customers to ALM. It provides core functionality for test management, including manual and automatic tests, and defect management. This license is limited to 20 users.\n\nALM Community Edition: Provides a subset of ALM product functionality, and is designed to introduce new customers to ALM. It provides core functionality for test management and defect management. This license is free, and is limited to five named users.',l:''},'API test':{d:'An automated, functional test for headless applications, such as Web services. These tests are created in UFT and can be viewed in ALM. The UFT term API test is also known as an automated Service Test scripted test.',l:''},'application area':{d:'Application areas contain all of the settings and resources required to create the content of automated business components for a particular application or part of an application. These include representations of the objects from your application contained in the shared object repository, and user-defined operations, contained in function libraries.',l:''},'associated libraries':{d:'Two libraries in the same project or in different projects, in which one library, the source library, was used as the basis for creating the other, imported library. You can compare associated libraries to track changes over time, or synchronize libraries to update one library with changes made to the other library.',l:''},'automation engineer':{d:'An expert in an automated testing product, such as UFT.',l:''},'baseline':{d:'A snapshot of a library at a specific point in time. It includes all the entities defined in the library and the relationships between them,such as coverage and requirements traceability. You can compare baselines to track changes in a project over time, or use a baseline to reuse or share the entities in a library.',l:''},'Build Verification module':{d:'Functional area of ALM accessible by selecting Build Verification on the ALM sidebar under Testing. Enables you to define and manage build verification suites. A build verification suite is a collections of functional test sets together with a single instance of a performance test, that when run together check the status of a defined application under test environment.',l:''},'business component':{d:'An easily-maintained, reusable unit comprising one or more steps that perform a specific task. You can use business components in multiple tests and flows. A business component can be defined as a manual or automated component. Business components may require input values from an external source or from other components, and they can return output values to other components.',l:''},'Business Components module':{d:'Functional area of ALM accessible by selecting Business Components on the ALM sidebar under Testing. This module enables subject matter experts to work with Business Process Testing (BPT), the test automation solution. You use reusable business process components and flows to create business process tests. You can also combine manual components to manually test your application. Access to this module is dependent on your ALM license.',l:''},'business criticality':{d:'A risk-based quality management (RBQM) category that measures how crucial a requirement is for the business. Risk is calculated basedon the combined results of the Business Criticality and the Failure Probability assessment.',l:''},'Business Models module':{d:'Functional area of ALM accessible by selecting Business Models on the ALM sidebar under Requirements. This module enables you to import business process models, and test the quality of the models and their components. Access to this module is dependent on your ALM license.',l:''},'business process model':{d:'A diagram that represents the activities and workflows that take place in an organization. Business process models are imported to ALM for testing in the Business Models module. \nAlternatively, an ALM entity in the Business Models module that represents a business process model as a whole.',l:''},'business process test':{d:'A scenario comprising a sequence of business components or flows, designed to test a specific business process of an application.',l:''},'business view':{d:'A data set based on project entities which reflects only that information that is useful from a business perspective. The view is then used as a basis for the various ALM reporting tools. Business views are created and managed in Project Customization.',l:''},'Business Views Microsoft Excel add-in':{d:'You can create and configure business view reports in Excel. You must first install the ALM Business Views Microsoft Excel Add-in on your client machine.',l:''},'canvas view':{d:'A view that enables you to modify test scripts using a graphical display.',l:''},'check in':{d:'When using version control, the process in which a new, updated version of an entity is created and made available to other users. After you check out the entity and make changes, you check in a new version of the entity.',l:''},'check out':{d:'When using version control, the process in which you lock an entity to make changes, preventing other users from overwriting your \nchanges. The checked out version of an entity is not visible to other users.',l:''},'client-side':{d:'Running a test on your local machine.',l:''},'component':{d:'A business component is the building block on which business process testing is based. A business component is an easily-maintained, reusable unit comprising one or more steps that perform a specific task and their component steps describe the condition or state of the application before and after that task. You can use business components in multiple tests and flows. A business component can be defined as a manual or automated component. Business components may require input values from an external source or from other components, and they can return output values to other components.',l:''},'component request':{d:'A request for the creation of a new business component, when no existing component answers the needs of a business process test or flow. Component requests are initiated in the Test Plan module and can be viewed in the Component Requests folder in the Business Components module.',l:''},'content':{d:'Low-level, detailed information about a component, such as the component\u0027s steps.',l:''},'coverage':{d:'The links you create to keep track of the relationship between your requirements and tests. In the Test Plan module, you create\n requirements coverage by selecting requirements to link to a test. \nAlternatively, in the Requirements module, you create test coverage by selecting tests to link to a requirement. A test can cover more than one requirement, and a requirement can be covered by more than one test.',l:''},'cross filter':{d:'An advanced, second-level filter on an associated item, such as requirements, tests, test sets, or defects. For example, in the\n Requirements module, you can define a cross filter to exclude\n requirements whose covering tests have the Passed status.',l:''},'cross project customization':{d:'The process of customizing a template project to define and maintain a common set of project customizations for multiple ALM projects. You link a template project to one or more other projects. You then customize the template and apply customization to the linked projects. Template customization applied to linked projects can include user groups and permissions, project entities, requirement types, lists, and workflow.',l:''},'cycle':{d:'A set of development and quality assurance efforts performed to achieve a common goal based on the release timeline. After you define a release, you add cycles to the release. You can then assign \nrequirements, defects, and test set folders to the cycles.',l:''},'Dashboard module':{d:'Functional area of ALM accessible by selecting Dashboard on the ALM sidebar. This module enables you to analyze ALM data by creating, viewing and managing graphs, standard reports, and Excel reports. You also create dashboard pages that display multiple graphs side-by-side.',l:''},'dashboard page':{d:'A selection of graphs that you view in a single display. You design and view dashboard pages in the Dashboard View tab of the Dashboard module.',l:''},'default test set':{d:'A test set that contains automated and manual tests. Tests in this test set use client-side execution.',l:''},'defect':{d:'A problem detected in the project application during any phase of the\n application management process. You can link defects to other project entities, such as requirements, tests, or other defects. A defect can be linked directly or indirectly to other entities. When you add a defect link to an entity, ALM adds a direct link to this entity and indirect links to other related entities.',l:''},'Defects module':{d:'Functional area of ALM accessible by selecting Defects on the ALM sidebar. This module enables you to submit and track defects, determine repair priorities, and analyze the data.',l:''},'Desktop client':{d:'The ALM Desktop client provides full ALM functionality in a user interface for managing the lifecycle of your application. Consider using the ALM Web Client, as an alternative to the ALM Desktop client. See also: Web client.',l:''},'domain':{d:'ALM projects are grouped by domain. A domain contains a group of related ALM projects and assists you in organizing and managing a large number of projects. Each domain contains a Projects folder and a Template Projects folder to organize your ALM projects and template \nprojects.',l:''},'DQL':{d:'The process of creating business view queries utilizes DQL, a domain query language. For the most part, DQL is an exact match to ANSI SQL 9.2, however there are some significant differences.',l:''},'draft run':{d:'A test run whose outcome does not impact test statistics such as execution status or coverage. You can set a test run as a draft before or after the run, enabling you to try out tests while they are in\ndevelopment, or after they have been modified. When you change\nthe draft run value, ALM recalculates tests statistics and updates status fields.',l:''},'dynamic data':{d:'Values for a test configuration specified in an external Microsoft Excel file, which is then uploaded as a test resource and mapped to a test configuration in ALM.',l:''},'encryption':{d:'Setting a business process testing parameter value so that it is displayed as asterisks and cannot be seen.',l:''},'entity':{d:'A data set in an ALM project that works as a unit, such as the requirement entity which stores data on all ALM requirements. Entities contain data entered by users for a specific application management process and the data is stored in tables. Some entities contain both system fields and user-defined fields.\nAlternatively, an individual record containing unique data, such as a\nsingle requirement in the Requirements module. You can create and\nmodify an entity, mail an entity, maintain a history of changes made\nto an entity, or create links between entities.',l:''},'environment':{d:'Environments enable you to analyze test coverage by viewing different environments for your tests. Each environment represents a different set of software and/or hardware configurations on which each test and its configurations should run. Environments are defined using the ALM Web client.',l:''},'Excel add-in':{d:'You can import requirement, test plan, or defect data from a Microsoft Excel worksheet to an ALM project. To import from Excel, you first install the ALM Microsoft Excel Add-in on your client machine.',l:''},'execution report':{d:'A dialog box that enables you to view the current state of test runs. You can also use this dialog box to stop test runs that are currently executing.',l:''},'failure probability':{d:'A risk-based quality management (RBQM) category that indicates\n how likely a test based on the requirement is to fail. Risk is calculated based on the combined results of the Failure Probability and the \nBusiness Criticality assessment.',l:''},'flow':{d:'A reusable collection of business components in a fixed sequence that performs a specific task. You can use flows in multiple business process tests. Flows may require input values from an external source or from other components or flows, and they can return output values to other components or flows.',l:''},'flow-level input parameter':{d:'Variable values that enable you to define data used by a flow that is provided to the flow from an external source. See also: parameterization',l:''},'flow-level output parameter':{d:'Values that enable you to define data that is retrieved and stored by a flow and can be used in subsequent components in a flow. See also: parameterization',l:''},'functional complexity':{d:'A risk-based quality management (RBQM) category that indicates the complexity of the requirement’s implementation.',l:''},'functional test set':{d:'A test set that contains automated tests. Tests in this test set use server-side execution.',l:''},'group':{d:'A combination of contiguous components that you can iterate together in a business process test or flow.',l:''},'GUI test':{d:'An automated, keyword-driven functional test that can be created in UFT or ALM. The UFT term keyword GUI test is also known as an automated QuickTest Professional keyword-driven test.',l:''},'implementation requirements':{d:'Details and information, written by the subject matter expert that creates a business component, describing a general overview of the business component’s purpose or goals, and the condition of the application before and after a component is run (the pre-conditions and post-conditions).',l:''},'imported library':{d:'You can create a new library by importing an existing library. An imported library is a library that you create by importing an existing library from the same project or from a different project.',l:''},'input component parameter':{d:'Variable values that a business component can receive and use as the values for specific, parameterized steps in the component. See also: parameterization',l:''},'input parameter':{d:'A variable value that a business component, flow or test can receive and use as the value for parameterized steps.',l:''},'iteration':{d:'The number of times that an individual business component, group of components, flow, or test configuration, runs within a single test run, or the number of times that an entire business process test runs within a test set.',l:''},'key performance indicator (KPI)':{d:'You define a KPI in a project planning and tracking (PPT) milestone. A KPI is a quantifiable measure designed to track a critical performance variable over time, and measure the essential outcome of a release scope item. For each KPI, you define threshold limits for allowable deviations.',l:''},'keyword GUI test':{d:'An automated, keyword-driven functional test that can be created in UFT or ALM. The UFT term keyword GUI test is also known as an automated QuickTest Professional keyword-driven test.',l:''},'keyword view':{d:'The keyword view enables you to create and view the steps of your keyword-driven automated components in a modular, table-like format. Each step is displayed as a row in the keyword view, and is comprised of individual, modifiable parts. You can create and modify steps by selecting items and operations in the keyword view and entering information as required. Each step is automatically documented as you complete it, enabling you to view a description of your action or component in understandable sentences. You can also use these descriptions as instructions for manual testing, if required.',l:''},'Libraries module':{d:'Functional area of ALM accessible by selecting Libraries on the ALM sidebar under Management. This module enables you to define and create libraries and baselines to track changes in your project, reuse entities in a project, or share entities across multiple projects.',l:''},'library':{d:'A defined set of entities in a project and the relationships between them, such as coverage and requirements traceability. The entities in a library can include requirements, tests, test resources, and business components. After you define a library, you then create a baseline, enabling you to track changes in a project over time, reuse the entities in a project, or share entities across multiple projects.',l:''},'linkage':{d:'Parameter linkage enables you to make data available between business components and flows by passing the values of output parameters to input parameters of subsequent business components and flows in a test. The process of setting the value of an input parameter to the value of an output parameter is called linking output and input parameters.',l:''},'linked project':{d:'A project connected to a template project. You apply template customization updates to the linked project as a part of cross project customization.',l:''},'Management module':{d:'Functional area of ALM accessible by selecting Management on the ALM sidebar. This module includes two sub-modules: Releases module and Libraries module.',l:''},'mapping':{d:'Associating parameters to column headers of an imported .csv or .xls file.',l:''},'milestone':{d:'To measure the progress of a project planning and tracking (PPT) release scope item, you associate it with milestones. A milestone is a point in the time-line of a release that signifies the completion of a deliverable. It enables you to validate the progress of the release. A milestone can be associated with one or more release scope items.',l:''},'obsolete':{d:'Components, folders, or component requests that have been deleted but are still being used by one or more business process tests or flows.',l:''},'obsolete folder':{d:'Special folder that contains obsolete components, folders, and component requests.',l:''},'output component parameter':{d:'Values that a business component can return. These values can be viewed in the business process test results and can also be used as input for a component or flow that is used later in the test. See also: parameterization',l:''},'output parameter':{d:'A value that a business component can return. This value can be viewed in the business process test results and can also be used as input for a component or flow that is used later in the test.',l:''},'parameterization':{d:'Parameters expand the scope of business components, flows, and business process tests by replacing fixed values with input and output parameters. Parameterization enables you to iterate specific components in a business process test, specific components in a flow, test configurations, or entire business process tests, thereby creating data-driven tests.',l:''},'path':{d:'A business process model entity that represents a series of transitions between activities. You define paths in ALM that are critical for quality testing.',l:''},'performance test set':{d:'A test set that contains performance tests.',l:''},'pinned test set':{d:'A test set that is linked to a baseline. In the Test Lab module, after you create a test set, you can link the test set to a baseline that you specify. When you run the test set, ALM runs only the versions of the test stored in the baseline.',l:''},'post-condition':{d:'The state of the application after the last step in a business component. A post-condition may state that an application should be open to a particular screen, or be closed. \nIf you want the business component to allow iterations, the post-conditions should specify that the application’s end state must match its state at the beginning of the component. The pre-conditions and post-conditions provide a guide when implementing the steps for the business component.',l:''},'pre-condition':{d:'The state of the application before the first step in a business component. For example, the pre-condition for a component may state that all applications should be closed, or a specific application should be open to a specific screen or with a specific dialog box displayed. \nIf you want the business component to allow iterations, the post-conditions should specify that the application’s end state must match its state at the beginning of the component. The pre-conditions and post-conditions provide a guide when implementing the steps for the business component.',l:''},'project':{d:'Collects and stores data relevant to the application lifecycle management process, including, but not limited to, requirements, tests, defects, and additional resources. Projects are stored in the ALM project repository on the application server’s file system.',l:''},'project customization':{d:'The process of adapting a project to meet the specific needs of your organization. Using the Project Customization window, you can control access to a project by defining the users who can access the\nproject, determining the types of tasks each user can perform, and\nadding and modifying fields.',l:''},'project planning and tracking (PPT)':{d:'A feature that enables quality assurance managers to track application readiness by defining goals and activities involved in the quality assurance process of an application release. This feature is accessed from the Releases module and it includes the following tabs: Release Scope, Master Plan, and Scorecard.',l:''},'promotion':{d:'The act of making a lower-level parameter value available to a higher-level entity. You can promote a flow-level parameter to the test level. You can promote a component-level parameter to the flow and/or test levels.',l:''},'QuickTest Professional':{d:'A comprehensive functional and regression testing tool. Unified Functional Testing (UFT) comprises the product formerly known as QuickTest Professional and the product known as Service Test. Functionality provided by QuickTest is now known as GUI testing in UFT. Functionality provided by Service Test is also known as API testing in UFT.',l:''},'release':{d:'A group of changes to the application that will be available for distribution at the same time. You can divide a release into cycles. You can then assign requirements and defects to the release and cycles.',l:''},'release scope item':{d:'A subdivided section of a project planning and tracking (PPT) release. For each release scope item you define the related requirements, tests, and defects. To measure the progress of a release scope item, you associate it with a milestone.',l:''},'Releases module':{d:'Functional area of ALM accessible by selecting Releases on the ALM sidebar under Management. This module allows you to organize and track your upcoming releases by defining releases and cycles for the application management process.',l:''},'representative requirement':{d:'A requirement that corresponds to a business process model, activity, or path. Representative requirements link model entities to their associated requirements, tests, and defects.',l:''},'requirement':{d:'A detailed description of a specific objective of your application. You organize your requirements in a requirements tree, a hierarchical structure in which you can group your application’s requirements according to function or objective. You can link a requirement to releases and cycles in the Releases module. You can also create links between a requirement and other requirements, tests, and defects.',l:''},'requirement type':{d:'A category for a requirement that describes the purpose of the requirement, such as a functional requirement, or a testing\nrequirement. You assign each requirement to one of the  default\nrequirement types, or to a customized requirement type that the\nproject administrator can create.',l:''},'requirements coverage':{d:'The links you create to keep track of the relationship between your requirements and tests. In the Test Plan module, you create requirements coverage by selecting requirements to link to a test. Requirements coverage assists you in assessing the impact of a change in the test or requirement. A test can cover more than one\nrequirement. The direct cover status of a requirement reflects the\nexecution status of the tests covering the requirement.',l:''},'Requirements module':{d:'Functional area of ALM accessible by selecting Requirements on the ALM sidebar under Requirements. This module enables you to create, manage and analyze requirements in a hierarchical tree-structure. You can also create links between requirements and other requirements, tests, or defects.',l:''},'requirements traceability':{d:'A link you create to establish a relationship between requirements. When analyzing the impact of a proposed change in a requirement, traceability identifies other requirements that may be affected by the change. You define traceability relationships in the Requirements Traceability tab of the Requirements module. You can add traceability links to and from a selected requirement.',l:''},'risk-based quality management (RBQM)':{d:'A feature that assists you in determining a testing strategy for your requirements, based on risk and functional complexity, testing time, and the resources you have available. You work with risk-based quality management in the Risk Analysis and Risk Assessment tabs of the Requirements module.',l:''},'role':{d:'A type of ALM user (for example, tester, business analyst, and so on).',l:''},'run condition':{d:'A conditional statement you can insert into a flow to check the current value of a given parameter before running a component in a flow. The run condition determines whether to run the component, skip the component run, or skip and set the component status to fail.',l:''},'scripted GUI test':{d:'An automated, scripted functional test that can be created in UFT and viewed in ALM. The UFT term scripted GUI test is also known as an automated QuickTest Professional scripted test.',l:''},'server-side':{d:'Running a test on a remote testing host. Your local machine is not necessary during the execution of the test.',l:''},'Service Test':{d:'A comprehensive functional and regression testing tool. Unified Functional Testing (UFT) comprises the product formerly known as QuickTest Professional and the product known as Service Test. Functionality provided by QuickTest is now known as GUI testing in UFT. Functionality provided by Service Test is also known as API testing in UFT.',l:''},'shell':{d:'Basic information about a business component, such as its name and status.',l:''},'source library':{d:'You can create a new library by importing an existing library from the same project or from a different project. A source library is a library used as the basis for creating another library.',l:''},'Sprinter':{d:'A manual testing solution, providing advanced functionality and a variety of tools to assist in the manual testing process. Sprinter is fully integrated with ALM, enabling you to run tests manually from the Test Lab module using Sprinter.',l:''},'static data':{d:'Values for a test configuration specified from within ALM.',l:''},'status (business process test or flow)':{d:'For components: \nA status value that indicates whether a business component is fully implemented, debugged, and ready to be run in a business process test or flow. The component with the most severe status determines the status of the entire test or flow. The status can be modified by the subject matter expert in ALM and the automation engineer in UFT\n\nFor tests and flows: A status value that is automatically generated based on the status values of all the business components in the business process test or flow.',l:''},'system field':{d:'An ALM default field for entering data in an ALM project. System fields cannot be added or deleted, only modified.',l:''},'template project':{d:'A customized project used to apply a common set of project\ncustomizations to other projects as a part of cross project\ncustomization. Enables you to standardize policies and procedures\nacross projects in your organization.',l:''},'template test':{d:'A test that includes common steps you often want to perform as part of other tests. You can mark a manual test in the test plan tree as a template test so that you can easily select it for calling from another test.',l:''}});