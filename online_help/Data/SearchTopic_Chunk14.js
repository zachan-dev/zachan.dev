define({"1297":{i:0.000166479769990371,u:"../Content/Admin/cust_report_template_design_style.htm",a:"In Style template files you define the formatting that is applied to Microsoft Word styles in all sections of a report. For example, in a Style template you define the formatting for the Normal style. As a result, text in section templates that is assigned the Normal style, is displayed in the ...",t:"Designing Style Templates"},"1298":{i:0.000166479769990371,u:"../Content/Admin/cust_report_template_design_history.htm",a:"In History template files you define how history information is displayed in all report sections. You design History templates using the Template Creator tab in Microsoft Word. To display History information in project reports, section templates must include  History merge fields. History templates ...",t:"Designing History Templates"},"1299":{i:0.000307989825837484,u:"../Content/Admin/cust_report_template_design_section.htm",a:"In section templates you define how information is displayed in report sections. You define separate section templates for each ALM entity that can be included in report sections. You design section templates using the Template Creator tab in Microsoft Word. Section templates can be in either a ...",t:"Designing Section Templates"},"1300":{i:0.0005461128192806,u:"../Content/Admin/cust_report_template_guidelines.htm",a:"Section templates can be designed in either full-page or tabular formats. Templates should consist of only one Word section. Only those text and fields in the first Word section are included in the generated report. Full-page templates In a full-page template, you arrange fields of an entity across ...",t:"Guidelines for Creating Full-Page and Tabular Templates"},"1301":{i:0.00103484671775375,u:"../Content/Admin/cust_report_template_creator_tab.htm",a:"Template Creator Tab The template creator enables you to design Document, History, and section templates in Microsoft Word.",t:"Template Creator Tab"},"1302":{i:0.00065741931080953,u:"../Content/Admin/cust_business_views_toc.htm",a:"Business Views This section describes how to create and manage business views, which can be used as a basis for ALM\u0027s reporting tools. This  section  includes:  ",t:"Business Views"},"1303":{i:0.000378983461470516,u:"../Content/Admin/cust_business_views_about.htm",a:"Business views are a semantic data layer that  can be used as a basis for the various HPE Application Lifecycle Management (ALM) reporting tools. The views are  based on project entities, and ensure that only information that is relevant to a business consumer is revealed in a report. For example, ...",t:"Business Views Overview"},"1304":{i:0.000999977578463765,u:"../Content/Admin/cust_business_views_manage.htm",a:"This task describes how to create and manage business views. To learn more about business views, see  Business Views Overview . Open the Business Views page On the ALM masthead, click  , then select Customize. The Project Customization window opens. In the Project Customization window, click the ...",t:"Creating and Managing Business Views"},"1305":{i:0.00392605544888303,u:"../Content/Admin/cust_business_views_dql.htm",a:"The process of creating business view queries utilizes DQL, a domain query language. For the most part, DQL is an exact match to ANSI SQL 9.2, however there are some significant differences. DQL only supports SELECT statements. This section includes: Advantages of DQL Building queries with DQL has ...",t:"Working with DQL"},"1306":{i:0.000166479769990371,u:"../Content/Admin/cust_business_views_ui.htm",a:"Business Views User Interface This section includes:",t:"Business Views User Interface"},"1307":{i:0.000481253618451104,u:"../Content/Admin/cust_business_views_page.htm",a:"Business Views Page The Business Views page enables you to create and manage business views. Business Views Page Common Elements User interface elements are described below:",t:"Business Views Page"},"1308":{i:0.000378983461470516,u:"../Content/Admin/cust_business_views_linked.htm",a:"Link Properties Dialog Box The Link Properties dialog box enables you to edit relationships between entities. User interface elements are described below.",t:"Link Properties Dialog Box"},"1309":{i:0.000481253618451104,u:"../Content/Admin/cust_business_views_add_related.htm",a:"Add Related Entity Dialog Box The Add Related Entity dialog box enables you to define joins between project entities. The dialog box enables you to select from all entities related to the source entity. User interface elements are described below:",t:"Add Related Entity Dialog Box"},"1310":{i:0.000179909082711915,u:"../Content/Admin/cust_bpt_toc.htm",a:"Configuring Business Process Testing This  section  describes how to configure Business Process Testing for working with business components in HPE Application Lifecycle Management (ALM). This  section  includes:  ",t:"Configuring Business Process Testing"},"1311":{i:0.000166479769990371,u:"../Content/Admin/cust_bpt_about.htm",a:"You can set additional Business Process Testing options, such as automatic creation of manual design steps as business components are created. For more information on working with Business Process Testing in ALM, refer to the HPE Business Process Testing User Guide.  Available in ALM 12.21: As a ...",t:"About Configuring Business Process Testing"},"1312":{i:0.00171208895752663,u:"../Content/Admin/cust_bpt_page.htm",a:"Business Process Test Page The Business Process Test customization page enables the project administrator to customize Business Process Testing.  Available in ALM 12.21: You can also customize BPT Packaged Apps Kit  on this page. User interface elements are described below:",t:"Business Process Test Page"},"1313":{i:0.000493235777848449,u:"../Content/Admin/cust_sprinter_toc.htm",a:"This  section  describes how to configure HPE Sprinter for running tests manually in HPE Application Lifecycle Management (ALM). ALM Editions:Sprinter functionality is not available with  Performance Center Edition. For more information about ALM editions and their functionality, see the HPE ...",t:"Configuring Sprinter"},"1314":{i:0.000307989825837484,u:"../Content/Admin/cust_sprinter_about.htm",a:"As a project administrator, you can enable running tests manually in your project using Sprinter, using Manual Runner, or both. By default, running tests manually is enabled for both Sprinter and Manual Runner. You can also set additional options for working with Sprinter, such as default screen ...",t:"About Configuring Sprinter"},"1315":{i:0.000166479769990371,u:"../Content/Admin/cust_sprinter_page.htm",a:"Sprinter Page  This page enables you to activate or deactivate Sprinter features. Deactivated features are visible in the Sprinter user interface, but are inactive.",t:"Sprinter Page "},"1316":{i:0.000446373953760672,u:"../Content/Admin/cust_wkflw_scripts_toc.htm",a:"ALM provides script generators to enable you to perform commonly needed customizations on the Defects module dialog boxes. For information on writing workflow scripts to customize the user interface and to control user actions in any ALM module, see  Workflow Customization at a Glance . Workflow ...",t:"Generating Workflow Scripts"},"1317":{i:0.000166479769990371,u:"../Content/Admin/cust_wkflw_scripts_about.htm",a:"The Workflow page provides links to script generators and a script editor. You can use the script generators to perform customizations on the input fields of the Defects module dialog boxes. You can use the script editor to create scripts to control the workflow in any ALM module. Performance ...",t:"About Generating Workflow Scripts"},"1318":{i:0.000282779498826606,u:"../Content/Admin/cust_wkflw_defect_module_fields.htm",a:"A field list is a list of values displayed in a drop-down list, from which the user can choose a value for the field. You can specify that a different field list be used for a Defects module field, depending on the value of another field. For example, you can set the Detected in Versions list to ...",t:"Customizing Defects Module Field Lists"},"1319":{i:0.000312171397885746,u:"../Content/Admin/cust_wkflw_defect_module_dbox.htm",a:"You can modify the appearance of the New Defect and Defect Details dialog boxes by setting different fields to be visible for each user group. You can also sort the order in which the fields are displayed on the dialog box for each user group. This workflow customization example can be modified to ...",t:"Customizing Defects Module Dialog Boxes"},"1320":{i:0.000166479769990371,u:"../Content/Admin/cust_managing_analysis_menus_about.htm",a:"The Analysis View module\u0027s Analysis Menu tab enables you to manage the behavior of graphs and project reports  that are generated from within the following modules: Requirements, Test Plan, Test Lab, Defects, and Business Components. The tab lists all graphs and project reports grouped per module. ...",t:"Managing Analysis Menus"},"1321":{i:0.000166479769990371,u:"../Content/Admin/000000_AG_sec_brk_wkflw_glance_toc.htm",a:"Workflow Customization Workflow Customization contains the following sections:  ",t:"Workflow Customization"},"1322":{i:0.00156735809910674,u:"../Content/Admin/wf_glance.htm",a:"You can write workflow scripts to customize the HPE Application Lifecycle Management (ALM) user interface, and to control the actions that users can perform. To customize workflow: In the Project Customization window, in the left pane, click Workflow. The Workflow page opens. To customize a Defects ...",t:"Workflow Customization at a Glance"},"1323":{i:0.000660633604056081,u:"../Content/Admin/wf_script_editor_toc.htm",a:"Working with the Workflow Script Editor You can use the Script Editor to create workflow scripts to customize the user interface, and to control user actions. This  section  includes:",t:"Working with the Workflow Script Editor"},"1324":{i:0.000166479769990371,u:"../Content/Admin/wf_script_editor_about.htm",a:"You can use the Script Editor to create workflow scripts and to add a toolbar button to the window of an HPE Application Lifecycle Management (ALM) module. The Script Editor dialog box contains two tabs: Script Editor tab. You use the Script Editor tab to create and edit workflow scripts. The Script ...",t:"About Working with the Workflow Script Editor"},"1325":{i:0.00028269179374293,u:"../Content/Admin/wf_script_editor_dbox.htm",a:"You can use the Script Editor to modify scripts that have been generated by a script generator, or to create a user-defined workflow script. For information on opening the Script Editor, see  Workflow Customization at a Glance . The Script Editor tab contains the following elements: Script Editor ...",t:"The Script Editor"},"1326":{i:0.000214538228163915,u:"../Content/Admin/wf_script_editor_commands.htm",a:"Understanding the Script Editor Commands The Script Editor toolbar, menu bar, and right-click menu contain the following buttons and menu commands:  ",t:"Understanding the Script Editor Commands"},"1327":{i:0.000285293256087471,u:"../Content/Admin/wf_script_create.htm",a:"You use the Script Editor to add VBScript code to an ALM event procedure, or to create user-defined procedures that can be called from an ALM event procedure. To create a workflow script: In the Workflow window, click the Script Editor link. The Script Editor opens. For more information on the ...",t:"Creating a Workflow Script"},"1328":{i:0.00138849150986601,u:"../Content/Admin/wf_toolbar_button_add.htm",a:"You can use the Toolbar Button Editor to define a toolbar button to be displayed on the window of an ALM module, or on the Manual Runner dialog box. To add a button to a toolbar: In the Script Editor, click the Toolbar Button Editor tab. From the Command bar list, select the toolbar to which you ...",t:"Adding a Button to a Toolbar"},"1329":{i:0.000348840382127771,u:"../Content/Admin/wf_script_editor_properties.htm",a:"You can customize the behavior of the Script Editor. To set the properties of the Script Editor: In the Script Editor, click the Properties button   \n or choose Options \u003e Editor Properties. The Properties dialog box opens. In the Editor tab, you can set the following options:",t:"Setting the Properties of the Script Editor"},"1330":{i:0.00102072287221981,u:"../Content/Admin/wf_event_ref_toc.htm",a:"You can write workflow scripts to customize the actions that HPE Application Lifecycle Management (ALM) users can perform, and the fields that are available to users in dialog boxes. To write a workflow script, you add VBScript code to event procedures that are triggered by user actions. This  ...",t:"Workflow Event Reference"},"1331":{i:0.000166479769990371,u:"../Content/Admin/wf_events_about.htm",a:"During an ALM user session, as the user initiates various actions, ALM triggers event procedures. You can place code in these procedures to customize the execution of the associated user actions. The Script Editor lists the event procedures for each ALM module, and allows you to add your code to the ...",t:"About ALM Events"},"1332":{i:0.000173732513011159,u:"../Content/Admin/wf_events_naming_convention.htm",a:"The naming convention for an event procedure is as follows: \u003centity\u003e_\u003cevent\u003e See  Entity  and  Event  for more details. For backwards compatibility, the previous naming convention, including the module name, is still supported. However, we recommend you use the new naming conventions instead. Some ...",t:"Naming Conventions for ALM Event Procedures"},"1333":{i:0.000215704776718334,u:"../Content/Admin/wf_events_naming_entity.htm",a:"Entity An Entity can be one of the following:",t:"Entity"},"1334":{i:0.000215704776718334,u:"../Content/Admin/wf_events_naming_event.htm",a:"Event The Event can be either a function name or a subroutine name. The event names are listed in  Reference for ALM Events .",t:"Event"},"1335":{i:0.000349831888869811,u:"../Content/Admin/wf_events_list.htm",a:"This section contains an alphabetical reference of the ALM event functions and subroutines. It includes the event name, description, syntax, type (Function or Sub), the value returned by a function, and the entities for which the event procedure is available. For information on the naming ...",t:"Reference for ALM Events"},"1336":{i:0.000173732513011159,u:"../Content/Admin/wf_event_ActionCanExecute.htm",a:"This event is triggered before ALM performs an action that has been initiated by the user, to check whether the action can be executed. You can add code to this event procedure to perform actions when the user has initiated a particular action, or to prevent the action from being executed in ...",t:"ActionCanExecute"},"1337":{i:0.000173732513011159,u:"../Content/Admin/wf_event_AddComponentToTest.htm",a:"AddComponentToTest This event is triggered when the user adds a component to a test of type Flow or Business-Process in the Test Script tab. Version Control: Changing components checked in or checked out by another user, using the AddComponentToTest event, is not supported.",t:"AddComponentToTest"},"1338":{i:0.000173732513011159,u:"../Content/Admin/wf_event_AfterPost.htm",a:"AfterPost This event is triggered after an object has been posted to the server. Project fields should not be changed after they have been posted, because then the new value is not stored in the database.",t:"AfterPost"},"1339":{i:0.000173732513011159,u:"../Content/Admin/wf_event_AttachmenCanDelete.htm",a:"Attachment_CanDelete This event is triggered before ALM deletes an attachment from the server, to check whether that attachment can be deleted.",t:"Attachment_CanDelete"},"1340":{i:0.000173732513011159,u:"../Content/Admin/wf_event_Attachment_CanOpen.htm",a:"Attachment_CanOpen This event is triggered before ALM opens an attachment from the server, to check whether the attachment can be opened.",t:"Attachment_CanOpen"},"1341":{i:0.000173732513011159,u:"../Content/Admin/wf_event_Attachment_CanPost.htm",a:"Attachment_CanPost This event is triggered before ALM updates an existing attachment on the server, to check whether the attachment can be updated.",t:"Attachment_CanPost"},"1342":{i:0.000173732513011159,u:"../Content/Admin/wf_event_Attachment_New.htm",a:"Attachment_New This event is triggered when an attachment is added to ALM.",t:"Attachment_New"},"1343":{i:0.000173732513011159,u:"../Content/Admin/wf_event_CanAddCompToTest.htm",a:"CanAddComponentsToTest This event is triggered before ALM adds business components to a test of type Flow or Business-Process, to check whether the specified components can be added.",t:"CanAddComponentsToTest"},"1344":{i:0.000173732513011159,u:"../Content/Admin/wf_event_CanAddFlowsToTest.htm",a:"CanAddFlowsToTest This event is triggered before ALM adds flows to a test of type Business-Process, to check whether the specified flows can be added.",t:"CanAddFlowsToTest"},"1345":{i:0.000173732513011159,u:"../Content/Admin/wf_event_CanAddTests.htm",a:"CanAddTests This event is triggered before ALM adds tests to a test set, to check whether the specified tests can be added.",t:"CanAddTests"},"1346":{i:0.000173732513011159,u:"../Content/Admin/wf_event_CanCustomize.htm",a:"CanCustomize This event is triggered when a user attempts to open the Customization window, to check whether the specified user can customize the specified project.",t:"CanCustomize"},"1347":{i:0.000173732513011159,u:"../Content/Admin/wf_event_CanDelete.htm",a:"This event is triggered before ALM deletes an object from the server, to check if the object can be deleted.  Additional Syntax for Backward Compatibility For purposes of backward compatibility, the following syntaxes are also available for certain objects. However, we recommend you use CanDelete ...",t:"CanDelete"},"1348":{i:0.000173732513011159,u:"../Content/Admin/wf_event_CanDeleteGrFroTest.htm",a:"CanDeleteGroupsFromTest This event is triggered when a user removes groups from a test of type Flow or Business-Process, to check whether the specified groups can be removed.",t:"CanDeleteGroupsFromTest"},"1349":{i:0.000173732513011159,u:"../Content/Admin/wf_event_CanLogin.htm",a:"CanLogin This event is triggered to check whether the specified user can log in to the specified project.",t:"CanLogin"},"1350":{i:0.000173732513011159,u:"../Content/Admin/wf_event_CanLogout.htm",a:"CanLogout This event is triggered to check whether the current user can log out of the current project.",t:"CanLogout"},"1351":{i:0.000173732513011159,u:"../Content/Admin/wf_event_CanPost.htm",a:"CanPost This event is triggered before ALM posts an object to the server, to check whether the object can be posted. You can add code to this event procedure to prevent an object from being posted in specific cases. For example, see  Example: Object Validation .",t:"CanPost"},"1352":{i:0.000173732513011159,u:"../Content/Admin/wf_event_CanReImportModels.htm",a:"CanReImportModels This event is triggered when attempting to import the specified business process models that already exist in ALM, to check if the business process models can be reimported.",t:"CanReImportModels"},"1353":{i:0.000173732513011159,u:"../Content/Admin/wf_event_CanRemoveComponent.htm",a:"CanRemoveComponentsFromTest This event is triggered when a user removes components from a test of type Flow or Business-Process, to check whether the specified components can be removed.",t:"CanRemoveComponentsFromTest"},"1354":{i:0.000173732513011159,u:"../Content/Admin/wf_event_CanRemoveFlowsTest.htm",a:"CanRemoveFlowsFromTest This event is triggered when a user removes flows from a test of type Business-Process, to check whether the specified flows can be removed.",t:"CanRemoveFlowsFromTest"},"1355":{i:0.000173732513011159,u:"../Content/Admin/wf_event_CanRemoveTests.htm",a:"CanRemoveTests This event is triggered to check whether the specified tests can be removed from a test set.",t:"CanRemoveTests"},"1356":{i:0.000173732513011159,u:"../Content/Admin/wf_event_DefaultRes.htm",a:"This function is used to determine the default return value for ALM functions, such as FieldCanChange. All ALM workflow functions call this function (unless explicitly omitted by user) to determine the default return value. DefaultRes can be used to quickly replace the default return values of all ...",t:"DefaultRes"},"1357":{i:0.000173732513011159,u:"../Content/Admin/wf_event_DialogBox.htm",a:"This event is triggered when a dialog box is opened or closed. For purposes of backward compatibility, this event is also triggered using backward compatible values for defect details (DialogBoxName=\"Details\") and test instance details (DialogBoxName=\"TestInstanceDetails\"). These backward compatible ...",t:"DialogBox"},"1358":{i:0.000173732513011159,u:"../Content/Admin/wf_event_EnterModule.htm",a:"EnterModule This event is triggered when the user enters or switches to an ALM module. It is also triggered when the user logs in to ALM. You can add code to this event procedure to perform an action whenever the user switches to the specified module. ",t:"EnterModule"},"1359":{i:0.000173732513011159,u:"../Content/Admin/wf_event_ExitModule.htm",a:"ExitModule This event is triggered when the user exits the specified module.",t:"ExitModule"},"1360":{i:0.000173732513011159,u:"../Content/Admin/wf_event_FieldCanChange.htm",a:"This event is triggered before ALM changes a field value, to determine whether the field can be changed. You can add code to this event procedure to prevent a field from being changed in specific cases. For example, see  Example: Field Validation . The code for hiding a field that depends on another ...",t:"FieldCanChange"},"1361":{i:0.000173732513011159,u:"../Content/Admin/wf_event_FieldChange.htm",a:"This event is triggered when the value of the specified field changes.  Every change of value triggers the field change event when the field loses focus. You can add code to this event procedure to perform an action when the value of a particular field is changed. For example, you can hide or ...",t:"FieldChange"},"1362":{i:0.000173732513011159,u:"../Content/Admin/wf_event_GetDetailsPageName.htm",a:"This event is triggered by ALM to retrieve the name of the page (tab) that has the index number specified in PageNum in the following dialog boxes: The Details dialog box for an entity  The New \u003centity\u003e dialog box for an entity You can add code to this event procedure to customize the tab names for ...",t:"GetDetailsPageName"},"1363":{i:0.000173732513011159,u:"../Content/Admin/wf_event_GetNewBugPageName.htm",a:"This event is triggered by ALM to retrieve the name of the New Defect dialog box page (tab) that has the index number specified in PageNum. You can add code to this event procedure to customize the tab names on the New Defect dialog box. For example, see  Example: Changing Tab Names . The ...",t:"GetNewBugPageName"},"1364":{i:0.000173732513011159,u:"../Content/Admin/wf_event_GetNewReqPageName.htm",a:"This event is triggered by ALM to retrieve the name of the New Requirement dialog box page (tab) that has the index number specified in PageNum. You can add code to this event procedure to customize the tab names on the New Requirement dialog box. For example, see  Example: Changing Tab Names . The ...",t:"GetNewReqPageName"},"1365":{i:0.000173732513011159,u:"../Content/Admin/wf_event_GetReqDetailPgName.htm",a:"This event is triggered by ALM to retrieve the name of the Requirement Details dialog box page (tab) that has the index number specified in PageNum. You can add code to this event procedure to customize the tab names on the Requirement Details dialog box. For example, see  Example: Changing Tab ...",t:"GetReqDetailsPageName"},"1366":{i:0.000173732513011159,u:"../Content/Admin/wf_event_MoveTo.htm",a:"This event is triggered when the user changes focus from one object to another.  You can add code to this event procedure to perform actions when the user changes the focus. For example, see  Example: Presenting a Dynamic Field List . When moving from one object to another in a tree, the MoveTo ...",t:"MoveTo"},"1367":{i:0.000173732513011159,u:"../Content/Admin/wf_event_MoveToCompFolder.htm",a:"This event is triggered when the user moves to the specified component folder in the business component tree. The MoveToComponentFolder event is not listed in the Scripts Tree of the Script Editor. This event is supported for purposes of backward compatibility. We recommend you use ...",t:"MoveToComponentFolder"},"1368":{i:0.000173732513011159,u:"../Content/Admin/wf_event_MoveToFolder.htm",a:"MoveToFolder This event is triggered when the user moves to the specified test set folder in the test sets tree. The MoveToFolder event is not listed in the Scripts Tree of the Script Editor. This event is supported for purposes of backward compatibility. We recommend you use MoveToFolder instead.",t:"MoveToFolder"},"1369":{i:0.000173732513011159,u:"../Content/Admin/wf_event_MoveToSubject.htm",a:"MoveToSubject This event is triggered when the user moves to the specified subject in the test plan tree. The MoveToSubject event is not listed in the Scripts Tree of the Script Editor. This event is supported for purposes of backward compatibility. We recommend you use MoveToSubject instead.",t:"MoveToSubject"},"1370":{i:0.000173732513011159,u:"../Content/Admin/wf_event_New.htm",a:"New This event is triggered when an object is added to ALM. You can add code to this event procedure to perform an action when a new object is added. For example, see  Example: Customizing a Defects Module Dialog Box .",t:"New"},"1371":{i:0.000173732513011159,u:"../Content/Admin/wf_event_RemoveCompFromTest.htm",a:"RemoveComponentFromTest This event is triggered when the user removes a component from a test of type Flow or Business-Process in the Test Script tab.  Version Control: Changing components checked in or checked out by another user, using the RemoveComponentFromTest event, is not supported.",t:"RemoveComponentFromTest"},"1372":{i:0.000173732513011159,u:"../Content/Admin/wf_event_RunTests.htm",a:"RunTests This event is triggered when the user clicks the Run button to run tests in the Test Lab module, provided that Sprinter is not installed and none of the tests is automated.",t:"RunTests"},"1373":{i:0.000173732513011159,u:"../Content/Admin/wf_event_RunTests_Sprinter.htm",a:"RunTests_Sprinter This event is triggered: When the user clicks the Run arrow and chooses Run with  Sprinter to run tests in the Test Lab module. When the user clicks the Run button to run tests in the Test Lab module, if Sprinter is installed and all the tests are manual.",t:"RunTests_Sprinter"},"1374":{i:0.000173732513011159,u:"../Content/Admin/wf_event_RunTestSet.htm",a:"RunTestSet This event is triggered when the user clicks the RunTest Set button to run a test set in the Test Lab module.",t:"RunTestSet"},"1375":{i:0.000173732513011159,u:"../Content/Admin/wf_event_RunTestsManually.htm",a:"RunTestsManually This event is triggered when the user clicks the Run arrow and chooses Run Manually to run tests in the Test Lab module.",t:"RunTestsManually"},"1376":{i:0.000542081161999332,u:"../Content/Admin/wf_object_ref_toc.htm",a:"Workflow scripts can reference HPE Application Lifecycle Management (ALM) objects to obtain information and to change project values. They can also use properties that return information about the current module and dialog box. This  section lists the ALM objects and properties that are available to ...",t:"Workflow Object and Property Reference"},"1377":{i:0.000166479769990371,u:"../Content/Admin/wf_object_ref_about.htm",a:"Workflow scripts can obtain information, make decisions based on that information, and change values in the project based on those decisions. You can obtain information such as the user group to which the current user belongs, and the value of a field, by accessing objects such as the User object or ...",t:"About ALM Objects and Properties"},"1378":{i:0.000179344320521927,u:"../Content/Admin/wf_objects_actions_obj.htm",a:"Actions Object You can use the Actions object to manipulate toolbar buttons, menu commands, and dialog boxes. The Actions object has the following property:",t:"Actions Object"},"1379":{i:0.000253181830613872,u:"../Content/Admin/wf_objects_action_obj.htm",a:"You can use the Action object to verify whether a button or command is enabled, checked, or visible. You can also use it to execute actions. For example, to set the Defect Details dialog box to open automatically when the user moves from one defect to another in the Defects Grid, place the following ...",t:"Action Object"},"1380":{i:0.000179344320521927,u:"../Content/Admin/wf_objects_fields_obj.htm",a:"You can use the following objects in workflow scripts to access the fields of ALM modules:  For example, to set a certain property for all fields in the Req_Fields object, you can refer to each field by its ID number (Req_Fields.FieldById). To set all fields to be visible (IsVisible)in a dialog box, ...",t:"Fields Objects"},"1381":{i:0.000179344320521927,u:"../Content/Admin/wf_objects_field_obj.htm",a:"You can use the Field object to access the properties of an entity field. For example, to display a message box when a user does not have permission to change a value in the Status field, you can use the following code: \nMsgbox \"You do not have permission to change \"_\n\u0026 ...",t:"Field Object"},"1382":{i:0.000179344320521927,u:"../Content/Admin/wf_objects_lists_obj.htm",a:"You can use the Lists object to limit field input to a specific list of values. For example, to set the list in the Planned Closing Version field, depending on the Project field value, you can use the following code: \nIf Bug_Fields.Field(\"BG_PROJECT\").Value = \"Project 1\" ...",t:"Lists Object"},});