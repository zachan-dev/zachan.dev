define({"0":{i:0.00256021532013517,u:"../Content/REST_API_Tech_Preview/General/Overview.html",a:"The REST API described in this help is a technical preview This version of the REST API is not supported by Micro Focus. It is provided for evaluation purposes. We do not recommend using the API in production code. See the  Micro Focus ALM REST API Reference for information about the supported, ...",t:"Overview"},"1":{i:0.00256021532013517,u:"../Content/REST_API_Tech_Preview/General/WhatsNew_1255.htm",a:"What\u0027s new in version 12.5X  No functional changes were made in this version. Rebranding to Micro Focus was completed.",t:"What\u0027s new in version 12.5X "},"2":{i:0.00256021532013517,u:"../Content/REST_API_Tech_Preview/General/WhatsNew_1200.htm",a:"Changes since the 11.52 release: Both file names and attachment IDs can be used to access attachments. See  attachments/{attachment} . \n\t\t\tA new resource,  resource-list , returns the available resources. The api-descriptor resource is no longer available.\n See also:  Breaking Changes between ...",t:"What\u0027s new in this release"},"3":{i:0.00256021532013517,u:"../Content/REST_API_Tech_Preview/General/WhatsNew_1152.htm",a:"Changes since the 11.00 release: The resources\n             customization/entities \n            and\n             customization/entities/[ID] \n            now return values based on the  entity-resource-descriptors \n            and\n             entity-resource-descriptor  schemas. A new customization ...",t:"What was new in 11.50 release"},"4":{i:0.00256021532013517,u:"../Content/REST_API_Tech_Preview/General/Compatibility_Breaks1200to1220.htm",a:"The following changes  require changes in existing applications that use the affected feature. Some errors that previously returned 500 now return different codes. New Status Code Cause 400 Invalid list field value 400 Invalid value type for field 400 Required field missing 400 Too many entities 400 ...",t:"Breaking Changes between versions 11.52 and 12.00"},"5":{i:0.00310428157466133,u:"../Content/REST_API_Tech_Preview/General/Compatibility_Breaks1152to1200.htm",a:"The following changes  require changes in existing applications that use the affected feature. Permissions for actions are more strictly enforced in this version. The logged-on users must have the same permissions for actions performed with the REST API as they would to perform the same action using ...",t:"Breaking Changes between versions 11.52 and 12.00"},"6":{i:0.0029954683237561,u:"../Content/REST_API_Tech_Preview/General/Compatibility_Breaks1100to1152.htm",a:"The following changes between  require changes in existing applications that use the affected feature. The customization/entities collection and the customization/entity resource no longer return data compliant with the EntityDescriptor and EntityDescriptors schemas. The customization/entities ...",t:"Breaking Changes between versions 11.00 and 11.52"},"7":{i:0.00626934109192116,u:"../Content/REST_API_Tech_Preview/General/General_Notes_and_Limitations.html",a:"The REST API described in this help is a technical preview This version of the REST API is not supported by Micro Focus. It is provided for evaluation purposes. We do not recommend using the API in production code. See the  Micro Focus ALM REST API Reference for information about the supported, ...",t:"General Notes and Limitations"},"8":{i:0.0035672178202176,u:"../Content/REST_API_Tech_Preview/General/HTTP_Return_Codes.html",a:"Unless otherwise specified, these HTTP status codes are used: Code\n                             Cause\n                             200 OK 201 Created 400 Bad request. Syntax or format error 400 Invalid list field value 400 Invalid value type for field 400 Required field missing 400 Too many entities ...",t:"HTTP Return Codes"},"9":{i:0.00319025467453914,u:"../Content/REST_API_Tech_Preview/General/Exceptions.html",a:"These are the application exceptions returned by the REST-based API. Other exceptions may be returned from ALM. Exception ID Description qccore.bulk-operation-failed A bulk operation failed, wholly or in part. See  Bulk Operations . qccore.check-in-failure Check-in operation failed. ...",t:"Exceptions"},"10":{i:0.0203055857988292,u:"../Content/REST_API_Tech_Preview/General/sanitizing_output.htm",a:"REST API output sanitization removes or encodes data returned by requests, thus reducing security risks. Output sanitization is enabled by default. You can disable it or configure  the feature using site parameters.  You can configure HTML sanitization  for the values of fields of various entities ...",t:"Sanitizing Output"},"11":{i:0.0198174645673561,u:"../Content/REST_API_Tech_Preview/General/sanitizing_html_configuration.htm",a:"To specify which tags, attributes, and protocols are returned as-is when using HTML sanitization, create a custom whitelist file named  sanitizer-whitelist.xml. Place  the file in directory: %ALM_INSTALL_DIR%/HP/ALM/webapps/qcbin/WEB-INF/classes/. On Windows platforms the default path is ...",t:"Output Sanitization Whitelist"},"12":{i:0.00256021532013517,u:"../Content/REST_API_Tech_Preview/General/Example_Application.html",a:"The examples are not production code . They are only to illustrate use of the API. We recommend that your production code include a library of client services that will handle basic tasks, such as authentication, JSON and XML parsing, and so on. The examples include the application classes: ...",t:"Example Application"},"13":{i:0.0040578329107752,u:"../Content/REST_API_Tech_Preview/CodeSamples/AttachmentsExample.htm",a:"\npackage org.hp.qc.web.restapi.docexamples.docexamples;\n\nimport org.hp.qc.web.restapi.docexamples.docexamples.infrastructure.Assert;\n        import org.hp.qc.web.restapi.docexamples.docexamples.infrastructure.Constants;\n        import ...",t:"AttachmentsExample"},"14":{i:0.00270529965467548,u:"../Content/REST_API_Tech_Preview/CodeSamples/CreateDeleteExample.htm",a:"\npackage org.hp.qc.web.restapi.docexamples.docexamples;\n\nimport org.hp.qc.web.restapi.docexamples.docexamples.infrastructure.Assert;\n        import org.hp.qc.web.restapi.docexamples.docexamples.infrastructure.Constants;\n        import ...",t:"CreateDeleteExample"},"15":{i:0.00270529965467548,u:"../Content/REST_API_Tech_Preview/CodeSamples/ReadExample.htm",a:"\npackage org.hp.qc.web.restapi.docexamples.docexamples;\n\nimport org.hp.qc.web.restapi.docexamples.docexamples.infrastructure.*;\nimport org.hp.qc.web.restapi.docexamples.docexamples.infrastructure.Entity.Fields.Field;\n\nimport java.net.HttpURLConnection;\n        import java.util.HashMap;\n        ...",t:"ReadExample"},"16":{i:0.00270529965467548,u:"../Content/REST_API_Tech_Preview/CodeSamples/UpdateExample.htm",a:" \npackage org.hp.qc.web.restapi.docexamples.docexamples;\n\nimport org.hp.qc.web.restapi.docexamples.docexamples.infrastructure.*;\nimport org.hp.qc.web.restapi.docexamples.docexamples.infrastructure.Entity.Fields.Field;\n\nimport java.net.HttpURLConnection;\n        import java.util.HashMap;\n        ...",t:"UpdateExample"},"17":{i:0.00270529965467548,u:"../Content/REST_API_Tech_Preview/CodeSamples/infrastructure/Assert.htm",a:"\n\npublic class Assert {\n\n    public static final void assertTrue (final String errorMessage,\n           boolean assertee){\n        if (!assertee) {\n            throw new RuntimeException(errorMessage);\n        }\n    }\n\n    public static final void assertEquals (final String errorMessage,\n            ...",t:"Assert"},"18":{i:0.00270529965467548,u:"../Content/REST_API_Tech_Preview/CodeSamples/infrastructure/Attribute.htm",a:"\npackage org.hp.qc.web.restapi.docexamples.docexamples.infrastructure;\n\nimport javax.xml.bind.annotation.*;\n\n/**\n * Java class for anonymous complex type.\n *\n * The following schema fragment specifies the expected content\n * contained within this class.\n *\n * \u003ccomplexType\u003e\n *   \u003csimpleContent\u003e\n *    ...",t:"Attribute"},"19":{i:0.00270529965467548,u:"../Content/REST_API_Tech_Preview/CodeSamples/infrastructure/Attributes.htm",a:"\n//\n// This file was generated by the JavaTM Architecture for XML Binding(JAXB)\n// Reference Implementation, vhudson-jaxb-ri-2.1-456\n// See  http://www.oracle.com/technetwork/articles/javase/index-140168.html \n// Any modifications to this file will be lost upon recompilation of the\n// source ...",t:"Attributes"},"20":{i:0.00270529965467548,u:"../Content/REST_API_Tech_Preview/CodeSamples/infrastructure/Base64Encoder.htm",a:"\n\npublic class Base64Encoder {\n\n    private final static char[] ALPHABET =\n\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".toCharArray();\n\n    private static int[] toInt = new int[128];\n\n    static {\n        for (int i = 0; i \u003c ALPHABET.length; i++) {\n            ...",t:"Base64Encoder"},"21":{i:0.00270529965467548,u:"../Content/REST_API_Tech_Preview/CodeSamples/infrastructure/Constants.htm",a:"\n\n\npackage org.hp.qc.web.restapi.docexamples.docexamples.infrastructure;\n\n/**\n *\n * These constants are used throughout the code to set the\n * server to work with.\n * To execute this code, change these settings to fit\n * those of your server.\n */\npublic class Constants {\n private Constants() {}\n    ...",t:"Constants"},"22":{i:0.00270529965467548,u:"../Content/REST_API_Tech_Preview/CodeSamples/infrastructure/Entity.htm",a:"\n\npackage org.hp.qc.web.restapi.docexamples.docexamples.infrastructure;\n\n/*\n\n This file was generated by the JavaTM Architecture for XML Binding(JAXB)\n Reference Implementation, vhudson-jaxb-ri-2.1-456\n See  http://www.oracle.com/technetwork/articles/javase/index-140168.html \n Any modifications to ...",t:"Entity"},"23":{i:0.00270529965467548,u:"../Content/REST_API_Tech_Preview/CodeSamples/infrastructure/EntityDescriptor.htm",a:"\n\n//\n// This file was generated by the JavaTM Architecture for XML Binding(JAXB)\n// Reference Implementation, vhudson-jaxb-ri-2.1-456\n// See http://www.oracle.com/technetwork/articles/javase/index-140168.html   \n// Any modifications to this file will be lost upon recompilation of the\n// source ...",t:"EntityDescriptor"},"24":{i:0.00270529965467548,u:"../Content/REST_API_Tech_Preview/CodeSamples/infrastructure/EntityMarshallingUtils.htm",a:"\n\n\n\npackage org.hp.qc.web.restapi.docexamples.docexamples.infrastructure;\n\nimport javax.xml.bind.JAXBContext;\nimport javax.xml.bind.JAXBException;\nimport javax.xml.bind.Marshaller;\nimport javax.xml.bind.Unmarshaller;\nimport java.io.StringReader;\nimport java.io.StringWriter;\n\n/**\n * A utility class ...",t:"EntityMarshallingUtils"},"25":{i:0.00270529965467548,u:"../Content/REST_API_Tech_Preview/CodeSamples/infrastructure/Response.htm",a:"\npackage org.hp.qc.web.restapi.docexamples.docexamples.infrastructure;\n\nimport java.util.Map;\n\n/**\n * This is a naive implementation of an HTTP response.\n * We use it to simplify matters in the examples.\n * It is nothing more than a container of the response headers\n * and the response body.\n ...",t:"Response"},"26":{i:0.00270529965467548,u:"../Content/REST_API_Tech_Preview/CodeSamples/infrastructure/RestConnector.htm",a:"\npackage org.hp.qc.web.restapi.docexamples.docexamples.infrastructure;\n\nimport java.io.ByteArrayOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\nimport java.util.Iterator;\nimport ...",t:"RestConnector"},"27":{i:0.00256021532013517,u:"../Content/REST_API_Tech_Preview/General/How_to_Do_Common_Tasks.html",a:"This section contains overviews of performing some common tasks. For more details, see the Resource Reference section. Authenticate  - Log on to the ALM Platform Session Management Create an Entity Delete an Entity Read an Entity Update an Entity Bulk Operations Handle an Exception Query a ...",t:"How to Do Common Tasks"},"28":{i:0.00563384576082428,u:"../Content/REST_API_Tech_Preview/General/Authenticate.html",a:"To receive services from the ALM Platform, the application must pass an LWSSO(Light Weight Single Sign On) cookie in the request header. This cookie is returned from the server after the user is authenticated. This LWSSOtoken is self-contained. By default, the token times out after one hour of ...",t:"Authenticate"},"29":{i:0.010106215692791,u:"../Content/REST_API_Tech_Preview/General/Session_Management.html",a:"Although RESTful applications are ideally stateless, the ALM platform requires sessions to manage locking, client lifetime, and perform other basic tasks. Session management is performed using a cookie named QCSession.  A QCSession cookie is returned by a POST on the  site-session  resource. The ...",t:"Session Management"},"30":{i:0.0304877896627156,u:"../Content/REST_API_Tech_Preview/General/Create_an_Entity.html",a:"To create an entity, perform a POST on the entity collection, pass an XML or JSON string that contains at least the required fields. The examples below use the defects collection, but the procedure is the same for all entities. Get the list of fields.\n To get the list of fields for an entity, use ...",t:"Create an Entity"},"31":{i:0.00894690183070198,u:"../Content/REST_API_Tech_Preview/General/Delete_an_Entity.html",a:"Delete an Entity To delete an entity, perform an HTTP DELETE on the entity resource. For example: http://SERVER:PORT/qcbin/rest/domains/{domain}/projects/{project}/defects/123 DELETE On success, the HTTP return value is 200. The returned HTML body contains the complete data of the deleted entity.",t:"Delete an Entity"},"32":{i:0.00894690183070198,u:"../Content/REST_API_Tech_Preview/General/Read_an_Entity.html",a:"An entity is a complete functional unit of information. Examples of entities are a defect,  a requirement, a test, a run, and a folder. The properties of an entity are presented by data in XML format that conforms to the  Entity Schema , or in JSON format. For multi-value fields, the values have ...",t:"Read an Entity"},"33":{i:0.0201892639979439,u:"../Content/REST_API_Tech_Preview/General/Update_an_Entity.html",a:"To update an entity, perform a PUT on the individual entity, passing an XML or JSON string that contains the fields to be changed. This example uses a defect, but the procedure is the same for all entities. The procedure is different depending on whether versioning is enabled for the project. See  ...",t:"Update an Entity"},"34":{i:0.00747336510841211,u:"../Content/REST_API_Tech_Preview/General/BulkOperations.htm",a:"Delete, update, and create operations can be performed on more than one entity with a single REST call. All entities in a bulk operation must be of the same entity type. For example, you cannot create a requirement and a defect in the same operation. The bulk operation executes for all of the ...",t:"Bulk Operations"},"35":{i:0.00370596394023546,u:"../Content/REST_API_Tech_Preview/General/Handle_an_Exception.html",a:"Exceptions return HTTP code 500. For the list of REST API exceptions, see  Exceptions . Exceptions are returned in text/html format if no ACCEPT header or  alt  clause is passed, or if the ACCEPT header is invalid. See  Sample Exception in HTML If application/xml is requested, the exception is ...",t:"Handle an Exception"},"36":{i:0.0188684831147314,u:"../Content/REST_API_Tech_Preview/General/Query_a_Collection_of_Entities.html",a:"Entities are members of collections. An entity collection is read by performing a GET operation on /{project}/{entities}. The returned data is paged. Collections are represented by data in XML format that conforms to the  Entities Collection Schema . To retrieve the information in another supported ...",t:"Query a Collection of Entities"},"37":{i:0.0274185935269228,u:"../Content/REST_API_Tech_Preview/General/Filtering.html",a:"A GET statement that returns a large amount of data can stress the database server and cause performance degradation for all users. To minimize the impact: filter the entities to be returned retrieve only the fields you actually need To retrieve only the fields you need, add a  fields  clause to the ...",t:"Filtering a Collection of Entities"},"38":{i:0.0222405761399328,u:"../Content/REST_API_Tech_Preview/General/relations_btwn_entities.htm",a:"Relations are a tool to describe links between entities. A relation specifies two entities and the nature of the links between them. A specific link is referenced with its identifier, the    Alias.  Aliases are used to create cross-filters where there is more than one possible type of link between ...",t:"Relations"},"39":{i:0.00854803699142911,u:"../Content/REST_API_Tech_Preview/General/order-by.html",a:"Description Sorts the returned items. Applies To All entity collection resources. Remarks Use logical names to identify the fields. See  Field Names . If no order-by clause is sent, the collection is sorted by entity ID. If an order-by field is a reference field, the reference value is used. For ...",t:"order-by Clause: Sort Results"},"40":{i:0.00854803699142911,u:"../Content/REST_API_Tech_Preview/General/fields.html",a:"Description Specifies the fields to be returned in the response to a GET operation on a collection. Applies To GET method called on  collections.  Does not apply to GET operations on individual entities. For example, the fields clause in this query has no effect: ...",t:"fields Clause: Selecting Fields to Return"},"41":{i:0.00500033950982878,u:"../Content/REST_API_Tech_Preview/General/Data_Paging.html",a:"When a query returns a large set of data, the results are returned in a series of pages. The client requests the next page after handling the data already received. On large collections, performance degrades when retrieving the later pages. To avoid stress on the database server, restrict the size ...",t:"Data Paging"},"42":{i:0.0109596487922595,u:"../Content/REST_API_Tech_Preview/General/alt.html",a:"Description Specifies the response format. Applies To All resources. Remarks The preferred method of specifying the response format is to use an Accept HTTP header. The Accept header enables specifying multiple alternative media types. The use of alt instead of an Accept header enables passing a ...",t:"alt Clause: Selecting the Return Type"},"43":{i:0.0110322510886994,u:"../Content/REST_API_Tech_Preview/General/force-delete-children.html",a:"Description Specifies whether to delete children of a folder when deleting the folder. Applies To A DELETE on an individual member of the  test-set-folders Collection  or the  test folders Collection . Remarks If \"force-delete-children=y\" is specified, the children are deleted when the parent is ...",t:"force-delete-children Clause: Specify Folder Delete Behavior"},"44":{i:0.00256021532013517,u:"../Content/REST_API_Tech_Preview/General/query.html",a:"Description The filter element of a GET on a collection. Applies To All collection resources. Remarks The syntax is ?query={query statement}. Replace spaces in queries with %20. For example, write \"query clause with spaces\" as \"query%20clause%20with%20spaces\". See  Filtering a Collection of Entities",t:"query Clause: Filtering the Entities to Return"},"45":{i:0.00539203853659042,u:"../Content/REST_API_Tech_Preview/REST/is-authenticated.html",a:"Description Checks whether the user is authenticated. URL /qcbin/rest/is-authenticated Remarks Requests to this resource do not open an ALM application session.  HTTP Methods GET: Checks whether user is authenticated. PUT: N/A DELETE: N/A POST: N/A Media Type GET\n                     PUT\n            ...",t:"is-authenticated"},"46":{i:0.00576900168226889,u:"../Content/REST_API_Tech_Preview/REST/site-session.html",a:"Description The client session maintained by the server. URL /qcbin/rest/site-session Remarks To specify a client type or timeout when creating a session, POST an XML compliant with the  Session-parameters Schema . The input XML is optional. The default values are: Client type = \"REST Client\" ...",t:"site-session"},"47":{i:0.00571206694253759,u:"../Content/REST_API_Tech_Preview/REST/audits_entity.html",a:"Description The collection of change records for an entity. URL /qcbin/rest/domains/{domain}/projects/{project}/        {entity collection}/{ID}/audits Remarks To get change records for more than one entity, use the  project level audits  resource.  HTTP Methods GET: Returns the collection of audit ...",t:"audits (entity level)"},"48":{i:0.00741572437948766,u:"../Content/REST_API_Tech_Preview/REST/audits_project_level.html",a:"Description A collection of change records. URL /qcbin/rest/domains/{domain}/projects/{project}/        audits[?query=] Remarks This format is used instead of the  entity-level audits  resource when more than a single entity is required.  The query can specify multiple entity types and entity IDs, ...",t:"audits (project level)"},"49":{i:0.00517173334186077,u:"../Content/REST_API_Tech_Preview/REST/entity.html",a:"Description The meta-data for an entity type defined in the project. URL /qcbin/rest/domains/{domain}/projects/{project}/      customization/entities/{entity name} Remarks The entity type name is in the singular. For example, test or requirement. HTTP Methods GET: Retrieves the collection entity ...",t:"entity"},"50":{i:0.0109670045506678,u:"../Content/REST_API_Tech_Preview/REST/entities_Collection.html",a:"Description The collection of entity types defined in the project. URL /qcbin/rest/domains/{domain}/projects/{project}/customization/entities Remarks  This resource is cached using an ETag. See the Micro Focus  Application Lifecycle Management Administrator Guide for details on enabling caching. ...",t:"entities Collection"},"51":{i:0.0170050626340135,u:"../Content/REST_API_Tech_Preview/REST/extensions.html",a:"Description The extensions enabled in a project. URL /qcbin/rest/domains/{domain}/projects/{project}/customization/extensions Remarks The name attribute of the extension is used to get the resource that represents an individual extension.  See  extensions/{name}  .  HTTP Methods GET: Gets the ...",t:"extensions Collection"},"52":{i:0.0170050626340135,u:"../Content/REST_API_Tech_Preview/REST/extension_by_name.html",a:"Description The extension with the specified name. URL /qcbin/rest/domains/{domain}/projects/{project}/customization/extensions/{name} Remarks The name attribute of the value in the   extensions Collection  is used to get the resource that represents an individual extension.    HTTP Methods GET: ...",t:"extensions/{name}"},"53":{i:0.0154738929399756,u:"../Content/REST_API_Tech_Preview/REST/fields_customization.html",a:"Description The collection of fields belonging to instances of the specified entity type. URL /qcbin/rest/domains/{domain}/projects/{project}/customization/entities/{entity name}/fields Remarks The filter parameters that can be applied to fields are required and can-filter. For example:    ...",t:"fields Collection"},"54":{i:0.00781362786817092,u:"../Content/REST_API_Tech_Preview/REST/lists_related_to_entity.html",a:"Description The collection of lists connected to fields of the specified entity type. URL /qcbin/rest/domains/{domain}/projects/{project}/customization/entities/{entity name}/lists Remarks The collection contains lists used to populate values of fields of the specified entity type.  The entity type ...",t:"lists Related to Entity"},"55":{i:0.00256021532013517,u:"../Content/REST_API_Tech_Preview/REST/permissions.html",a:"Description The user group permissions for an entity type in the project. URL /qcbin/rest/domains/{domain}/projects/{project}/      customization/entities/{entity name}/permissions Remarks The entity type name is in the singular. For example, test or requirement. For downloading permissions ...",t:"permissions Collection"},"56":{i:0.015038182466849,u:"../Content/REST_API_Tech_Preview/REST/relations.html",a:"Description The collection of entity relations in the project. URL /qcbin/rest/domains/{domain}/projects/{project}/      customization/relations /qcbin/rest/domains/{domain}/projects/{project}/      customization/entities/{entity}/relations/ Remarks The customization/relations query returns all the ...",t:"relations Collection"},"57":{i:0.0184049496396511,u:"../Content/REST_API_Tech_Preview/REST/relations_by_name.htm",a:"Description A relation between two entities. URL /qcbin/rest/domains/{domain}/projects/{project}/      customization/relations/{relationship name} /qcbin/rest/domains/{domain}/projects/{project}/      customization/entities/{entity}/relations/{relationship name} Remarks The two URLs above return the ...",t:"relations/{name}"},"58":{i:0.00328563699283672,u:"../Content/REST_API_Tech_Preview/REST/types.html",a:"Description The collection of sub-types for the specified entity. URL /qcbin/rest/domains/{domain}/projects/{project}/      customization/entities/{entity name}/types Remarks The entity type name is in the singular. For example, test or requirement. For downloading sub-types information together ...",t:"types Collection"},"59":{i:0.00256021532013517,u:"../Content/REST_API_Tech_Preview/REST/types_-_subtype_fields.html",a:"Description The fields that apply to the specified sub-types for the specified entity. URL /qcbin/rest/domains/{domain}/projects/{project}/      customization/entities/{entity name}/types/{subtype ID}/fields Remarks Get the subtype ID from the return value of the  types Collection . The entity type ...",t:"types-subtype fields Collection"},"60":{i:0.0123602164554327,u:"../Content/REST_API_Tech_Preview/REST/used-lists.html",a:"Description The collection of project lists that are in use. URL /qcbin/rest/domains/{domain}/projects/{project}/customization/used-lists Remarks This resource returns all the lists in the project that are connected to a field or used in a business rule. To get only the lists that can be used with a ...",t:"used-lists Collection"},"61":{i:0.00256021532013517,u:"../Content/REST_API_Tech_Preview/REST/users.html",a:"Description The collection of ALM users that are members of the project. URL /qcbin/rest/domains/{domain}/projects/{project}/customization/users Remarks The name parameter can be applied. For example: users?name=admin This query is equivalent to  users/{name}  This resource is cached using an ETag. ...",t:"users Collection"},"62":{i:0.00473648033823984,u:"../Content/REST_API_Tech_Preview/REST/users_by_name.html",a:"Description The data on the specified project user. URL /qcbin/rest/domains/{domain}/projects/{project}/customization/users/{user name] Remarks This resource is equivalent to users?name=admin. A PUT operation cannot update  the Name. Pass only the input data to be changed. See the example below. ...",t:"users/{name}"},"63":{i:0.00256021532013517,u:"../Content/REST_API_Tech_Preview/REST/analysis-item-folders.html",a:"Description The collection of folders for dashboard module items. URL /qcbin/rest/domains/{domain}/projects/{project}/analysis-item-folders Remarks There pre-defined Private and Public top-level folders. HTTP Methods GET: Retrieves the collection of favorite folders. PUT: N/A DELETE: N/A POST: ...",t:"analysis-item-folders Collection"},"64":{i:0.00256021532013517,u:"../Content/REST_API_Tech_Preview/REST/graph_layouts.html",a:"Description Provides read-only access to existing graph layouts that were created in the Dashboard Analysis module. URL Public /qcbin/rest/public/domains/{domain}/projects/{project}     /graphs/{ID}/layouts/{layout name}     ?alt={mime type}\u0026authKey={authentication key} Login required ...",t:"graphs layouts"},"65":{i:0.00256021532013517,u:"../Content/REST_API_Tech_Preview/REST/reports.html",a:"Description A project report previously created in the ALM user interface. URL /qcbin/rest/domains/{domain}/projects/{project}/reports/{ID}?alt={mime type} /qcbin/rest/public/domains/{domain}/projects/{project}/reports/{ID}?alt={mime type}\u0026authKey={key} Remarks To get the URL, right click on the ...",t:"reports/{ID}"},"66":{i:0.00377126545622998,u:"../Content/REST_API_Tech_Preview/REST/defects.html",a:"Description The collection of Defects in the project. URL /qcbin/rest/domains/{domain}/projects/{project}/defects Remarks To create a new defect, POST an XML compliant with the  Entity Schema  that contains definitions for all the required fields. For bulk updates, deletions, and creation, see   ...",t:"defects Collection"},"67":{i:0.00256021532013517,u:"../Content/REST_API_Tech_Preview/REST/defects_by_ID.html",a:"Description The Defect with the specified ID. URL /qcbin/rest/domains/{domain}/projects/{project}/defects/{Defect ID} HTTP Methods GET: Returns the Defect. PUT: Updates the Defect. DELETE: Deletes the Defect. POST: N/A Media Type GET\n                 PUT\n                 DELETE\n                 ...",t:"defects/{ID}"},"68":{i:0.00293717846581363,u:"../Content/REST_API_Tech_Preview/REST/defect-links.html",a:"Description The collection of links to and from defects. URL /qcbin/rest/domains/{domain}/projects/{project}/defect-links Remarks To find defect-link from a specific defect, query for /defect-links?query={first-endpoint-id[\u003cdefect ID\u003e]}. Defect links between two defects are not directional. There is ...",t:"defect-links Collection"},"69":{i:0.00256021532013517,u:"../Content/REST_API_Tech_Preview/REST/defect-links_by_ID.html",a:"Description The defect link with the specified ID. URL /qcbin/rest/domains/{domain}/projects/{project}/defect-links/{Defect Link ID} Remarks To update a link, pass an XML body compliant with the  entity Schema . HTTP Methods GET: Retrieves the defect link. PUT: Updates the defect link. DELETE: ...",t:"defect-links/{ID}"},});